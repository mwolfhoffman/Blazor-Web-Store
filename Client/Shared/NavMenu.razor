@inject ICategoryService categoryService
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authStateProvider
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazing Shop</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <hr />
        @foreach (Category category in categoryService.Categories)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@category.Url" Match="NavLinkMatch.All">
                    <span class="oi oi-@category.Icon" aria-hidden="true"></span> @category.Name
                </NavLink>
            </div>
        }
        <hr />
        <AuthorizeView>
            <NotAuthorized>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/login" Match="NavLinkMatch.All">
                <span class="oi oi-account-login" aria-hidden="true"></span> Login
            </NavLink>
        </div>
            </NotAuthorized>
            <Authorized>
                <div class="nav-item px-3">
                    <a class="nav-link" @onclick="logout" style="cursor:pointer">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </a>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await categoryService.LoadCategories();
    }

    private async void logout()
    {
       await localStorage.RemoveItemAsync("username");
        await authStateProvider.GetAuthenticationStateAsync();
    }
}
